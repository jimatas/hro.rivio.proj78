<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_04) on Mon Aug 18 12:03:23 CEST 2008 -->
<TITLE>
XmlParser
</TITLE>

<META NAME="date" CONTENT="2008-08-18">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="XmlParser";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/XmlParser.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../proj78/xml/parser2/XmlParserImpl.html" title="class in proj78.xml.parser2"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?proj78/xml/parser2/XmlParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="XmlParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
proj78.xml.parser2</FONT>
<BR>
Class XmlParser</H2>
<PRE>
java.lang.Object
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>proj78.xml.parser2.XmlParser</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></DD>
</DL>
<DL>
<DT><B>Direct Known Subclasses:</B> <DD><A HREF="../../../proj78/xml/parser2/XmlParserImpl.html" title="class in proj78.xml.parser2">XmlParserImpl</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>XmlParser</B><DT>extends java.lang.Object<DT>implements <A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></DL>
</PRE>

<P>
Parses XML from some source, generating parse events during the process. 
 
 <p>Implements the <A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2"><CODE>XmlParseEventSource</CODE></A> interface 
 so that interested classes implementing the <A HREF="../../../proj78/xml/parser2/XmlParseEventListener.html" title="interface in proj78.xml.parser2"><CODE>XmlParseEventListener</CODE></A> interface can register themselves with this class.
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>K.A., copyright (c) 2008</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected static&nbsp;char[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#WHITESPACE">WHITESPACE</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Characters that are considered whitespace in XML.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected </CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#XmlParser()">XmlParser</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Initializes a new instance of the <code>XmlParser</code> class.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#addParseEventListener(proj78.xml.parser2.XmlParseEventListener)">addParseEventListener</A></B>(<A HREF="../../../proj78/xml/parser2/XmlParseEventListener.html" title="interface in proj78.xml.parser2">XmlParseEventListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Registers a parse event listener with this source.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireCDataSectionEvent(java.lang.String)">fireCDataSectionEvent</A></B>(java.lang.String&nbsp;content)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that a CDATA-section was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireCharactersEvent(java.lang.String)">fireCharactersEvent</A></B>(java.lang.String&nbsp;chars)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that text (characters other than CDATA) was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireCommentEvent(java.lang.String)">fireCommentEvent</A></B>(java.lang.String&nbsp;content)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that a comment was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireDoctypeDeclarationEvent(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">fireDoctypeDeclarationEvent</A></B>(java.lang.String&nbsp;dtdName,
                            java.lang.String&nbsp;publicId,
                            java.lang.String&nbsp;systemId,
                            java.lang.String&nbsp;internalSubset)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that the DOCTYPE was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireProcessingInstructionEvent(java.lang.String, java.lang.String)">fireProcessingInstructionEvent</A></B>(java.lang.String&nbsp;target,
                               java.lang.String&nbsp;data)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that a processing instruction was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireTagEndEvent(java.lang.String)">fireTagEndEvent</A></B>(java.lang.String&nbsp;tagName)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that the ending tag of an element was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireTagStartEvent(java.lang.String, java.util.Map)">fireTagStartEvent</A></B>(java.lang.String&nbsp;tagName,
                  java.util.Map&lt;java.lang.String,java.lang.String&gt;&nbsp;attrs)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that the starting tag of an element was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#fireXmlDeclarationEvent(java.lang.String, java.lang.String, java.lang.String)">fireXmlDeclarationEvent</A></B>(java.lang.String&nbsp;version,
                        java.lang.String&nbsp;encoding,
                        java.lang.String&nbsp;standalone)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fires an event to indicate that the XML declaration was just parsed.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#getLine()">getLine</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the current line number.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>static&nbsp;<A HREF="../../../proj78/xml/parser2/XmlParser.html" title="class in proj78.xml.parser2">XmlParser</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#newInstance()">newInstance</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Factory method that allows for the application to obtain an XML parser.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected abstract &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#parse()">parse</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Main parsing routine that is implemented in the subclass.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#parse(java.io.InputStream)">parse</A></B>(java.io.InputStream&nbsp;in)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses XML from a resource that is made accessible through the specified <CODE>InputStream</CODE> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#parse(java.io.Reader)">parse</A></B>(java.io.Reader&nbsp;in)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Parses XML from a resource that is made accessible through the specified <CODE>Reader</CODE> object.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;char</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#peek()">peek</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the character at the next position without moving the cursor forward.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#removeParseEventListener(proj78.xml.parser2.XmlParseEventListener)">removeParseEventListener</A></B>(<A HREF="../../../proj78/xml/parser2/XmlParseEventListener.html" title="interface in proj78.xml.parser2">XmlParseEventListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes a previously registered parse event listener.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;char</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#scan()">scan</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Moves the cursor forward one position and returns the character at that position.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#scanUntil(char...)">scanUntil</A></B>(char...&nbsp;pattern)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans from the current position to the first occurrence of any of the specified characters.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#scanUntil(java.lang.String)">scanUntil</A></B>(java.lang.String&nbsp;pattern)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans from the current position to the first occurrence of the specified string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;java.lang.String</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#scanUntil(java.lang.String, boolean)">scanUntil</A></B>(java.lang.String&nbsp;pattern,
          boolean&nbsp;ignoreCase)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Scans from the current position to the first occurrence of the specified string.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#skip(char...)">skip</A></B>(char...&nbsp;pattern)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Moves the cursor forward without returning a value (i.e., skipping characters) while the next character 
 scanned matches any of the specified characters - in any order.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#skip(java.lang.String)">skip</A></B>(java.lang.String&nbsp;pattern)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Moves the cursor forward without returning a value (i.e., skipping characters) while the next character 
 scanned matches the subsequent character in the specified string, in order, from first to last.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#skip(java.lang.String, boolean)">skip</A></B>(java.lang.String&nbsp;pattern,
     boolean&nbsp;ignoreCase)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Moves the cursor forward without returning a value (i.e., skipping characters) while the next character 
 scanned matches the subsequent character in the specified string, in order, from first to last.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;char</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../proj78/xml/parser2/XmlParser.html#unscan()">unscan</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Moves the cursor back one position and returns the character at that position.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.Object</B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="WHITESPACE"><!-- --></A><H3>
WHITESPACE</H3>
<PRE>
protected static final char[] <B>WHITESPACE</B></PRE>
<DL>
<DD>Characters that are considered whitespace in XML.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="XmlParser()"><!-- --></A><H3>
XmlParser</H3>
<PRE>
protected <B>XmlParser</B>()</PRE>
<DL>
<DD>Initializes a new instance of the <code>XmlParser</code> class.
<P>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="newInstance()"><!-- --></A><H3>
newInstance</H3>
<PRE>
public static <A HREF="../../../proj78/xml/parser2/XmlParser.html" title="class in proj78.xml.parser2">XmlParser</A> <B>newInstance</B>()</PRE>
<DL>
<DD>Factory method that allows for the application to obtain an XML parser.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>a new instance of the concrete <code>XmlParser</code> subclass.</DL>
</DD>
</DL>
<HR>

<A NAME="parse(java.io.InputStream)"><!-- --></A><H3>
parse</H3>
<PRE>
public final void <B>parse</B>(java.io.InputStream&nbsp;in)</PRE>
<DL>
<DD>Parses XML from a resource that is made accessible through the specified <CODE>InputStream</CODE> object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>in</CODE> - represents the stream of XML characters to parse.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>MALFORMED_XML_ERR</em>: if a parse error occurs.<br />
        <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the specified byte stream.</DL>
</DD>
</DL>
<HR>

<A NAME="parse(java.io.Reader)"><!-- --></A><H3>
parse</H3>
<PRE>
public final void <B>parse</B>(java.io.Reader&nbsp;in)</PRE>
<DL>
<DD>Parses XML from a resource that is made accessible through the specified <CODE>Reader</CODE> object.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>in</CODE> - a <code>Reader</code> containing the XML to parse; either a complete document or a well-formed fragment.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>MALFORMED_XML_ERR</em>: if a parse error occurs.<br />
        <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the specified character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="parse()"><!-- --></A><H3>
parse</H3>
<PRE>
protected abstract void <B>parse</B>()</PRE>
<DL>
<DD>Main parsing routine that is implemented in the subclass.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>MALFORMED_XML_ERR</em>: if a parse error occurs.<br />
        <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="getLine()"><!-- --></A><H3>
getLine</H3>
<PRE>
protected final int <B>getLine</B>()</PRE>
<DL>
<DD>Returns the current line number.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the line that is currently being parsed.</DL>
</DD>
</DL>
<HR>

<A NAME="addParseEventListener(proj78.xml.parser2.XmlParseEventListener)"><!-- --></A><H3>
addParseEventListener</H3>
<PRE>
public final void <B>addParseEventListener</B>(<A HREF="../../../proj78/xml/parser2/XmlParseEventListener.html" title="interface in proj78.xml.parser2">XmlParseEventListener</A>&nbsp;listener)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#addParseEventListener(proj78.xml.parser2.XmlParseEventListener)">XmlParseEventSource</A></CODE></B></DD>
<DD>Registers a parse event listener with this source.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#addParseEventListener(proj78.xml.parser2.XmlParseEventListener)">addParseEventListener</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - an object implementing the <A HREF="../../../proj78/xml/parser2/XmlParseEventListener.html" title="interface in proj78.xml.parser2"><CODE>XmlParseEventListener</CODE></A> interface.</DL>
</DD>
</DL>
<HR>

<A NAME="removeParseEventListener(proj78.xml.parser2.XmlParseEventListener)"><!-- --></A><H3>
removeParseEventListener</H3>
<PRE>
public final void <B>removeParseEventListener</B>(<A HREF="../../../proj78/xml/parser2/XmlParseEventListener.html" title="interface in proj78.xml.parser2">XmlParseEventListener</A>&nbsp;listener)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#removeParseEventListener(proj78.xml.parser2.XmlParseEventListener)">XmlParseEventSource</A></CODE></B></DD>
<DD>Removes a previously registered parse event listener.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#removeParseEventListener(proj78.xml.parser2.XmlParseEventListener)">removeParseEventListener</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - the parse event listener object to remove.</DL>
</DD>
</DL>
<HR>

<A NAME="fireXmlDeclarationEvent(java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
fireXmlDeclarationEvent</H3>
<PRE>
public final void <B>fireXmlDeclarationEvent</B>(java.lang.String&nbsp;version,
                                          java.lang.String&nbsp;encoding,
                                          java.lang.String&nbsp;standalone)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireXmlDeclarationEvent(java.lang.String, java.lang.String, java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that the XML declaration was just parsed.
 
 <p>Note: implementors should invoke the <code>onXmlDeclaration</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireXmlDeclarationEvent(java.lang.String, java.lang.String, java.lang.String)">fireXmlDeclarationEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>version</CODE> - the XML version in use.<DD><CODE>encoding</CODE> - the character encoding in use; an optional attribute that may be <code>null</code>.<DD><CODE>standalone</CODE> - the standalone designation; either "yes", "no" or <code>null</code> (not specified).</DL>
</DD>
</DL>
<HR>

<A NAME="fireDoctypeDeclarationEvent(java.lang.String, java.lang.String, java.lang.String, java.lang.String)"><!-- --></A><H3>
fireDoctypeDeclarationEvent</H3>
<PRE>
public final void <B>fireDoctypeDeclarationEvent</B>(java.lang.String&nbsp;dtdName,
                                              java.lang.String&nbsp;publicId,
                                              java.lang.String&nbsp;systemId,
                                              java.lang.String&nbsp;internalSubset)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireDoctypeDeclarationEvent(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that the DOCTYPE was just parsed.
 
 <p>Note: Implementors should invoke the <code>onDoctypeDeclaration</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireDoctypeDeclarationEvent(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">fireDoctypeDeclarationEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>dtdName</CODE> - the name immediately following the DOCTYPE keyword.<DD><CODE>publicId</CODE> - the external subset's public identifier which is optional and may be <code>null</code>.<DD><CODE>systemId</CODE> - the external subset's system identifier which is optional and may be <code>null</code>.<DD><CODE>internalSubset</CODE> - a string containing the internal subset; <code>null</code> if not present.</DL>
</DD>
</DL>
<HR>

<A NAME="fireTagStartEvent(java.lang.String, java.util.Map)"><!-- --></A><H3>
fireTagStartEvent</H3>
<PRE>
public final void <B>fireTagStartEvent</B>(java.lang.String&nbsp;tagName,
                                    java.util.Map&lt;java.lang.String,java.lang.String&gt;&nbsp;attrs)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireTagStartEvent(java.lang.String, java.util.Map)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that the starting tag of an element was just parsed.
 
 <p>Note: Implementors should invoke the <code>onTagStart</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireTagStartEvent(java.lang.String, java.util.Map)">fireTagStartEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tagName</CODE> - the name of the tag.<DD><CODE>attrs</CODE> - a possibly empty map containing the attributes that were present.</DL>
</DD>
</DL>
<HR>

<A NAME="fireTagEndEvent(java.lang.String)"><!-- --></A><H3>
fireTagEndEvent</H3>
<PRE>
public final void <B>fireTagEndEvent</B>(java.lang.String&nbsp;tagName)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireTagEndEvent(java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that the ending tag of an element was just parsed.
 
 <p>Note: Implementors should invoke the <code>onTagEnd</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireTagEndEvent(java.lang.String)">fireTagEndEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>tagName</CODE> - the name of the tag.</DL>
</DD>
</DL>
<HR>

<A NAME="fireProcessingInstructionEvent(java.lang.String, java.lang.String)"><!-- --></A><H3>
fireProcessingInstructionEvent</H3>
<PRE>
public final void <B>fireProcessingInstructionEvent</B>(java.lang.String&nbsp;target,
                                                 java.lang.String&nbsp;data)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireProcessingInstructionEvent(java.lang.String, java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that a processing instruction was just parsed. 
 
 <p>Note: Implementors should invoke the <code>onProcessingInstruction</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireProcessingInstructionEvent(java.lang.String, java.lang.String)">fireProcessingInstructionEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>target</CODE> - the instruction target.<DD><CODE>data</CODE> - the instruction data; <code>null</code> if not present.</DL>
</DD>
</DL>
<HR>

<A NAME="fireCharactersEvent(java.lang.String)"><!-- --></A><H3>
fireCharactersEvent</H3>
<PRE>
public final void <B>fireCharactersEvent</B>(java.lang.String&nbsp;chars)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireCharactersEvent(java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that text (characters other than CDATA) was just parsed.
 
 <p>Note: Implementors should invoke the <code>onCharacters</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireCharactersEvent(java.lang.String)">fireCharactersEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>chars</CODE> - the characters that were parsed.</DL>
</DD>
</DL>
<HR>

<A NAME="fireCDataSectionEvent(java.lang.String)"><!-- --></A><H3>
fireCDataSectionEvent</H3>
<PRE>
public final void <B>fireCDataSectionEvent</B>(java.lang.String&nbsp;content)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireCDataSectionEvent(java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that a CDATA-section was just parsed.
 
 <p>Note: Implementors should invoke the <code>onCDataSection</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireCDataSectionEvent(java.lang.String)">fireCDataSectionEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>content</CODE> - the content of the CDATA-section.</DL>
</DD>
</DL>
<HR>

<A NAME="fireCommentEvent(java.lang.String)"><!-- --></A><H3>
fireCommentEvent</H3>
<PRE>
public final void <B>fireCommentEvent</B>(java.lang.String&nbsp;content)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireCommentEvent(java.lang.String)">XmlParseEventSource</A></CODE></B></DD>
<DD>Fires an event to indicate that a comment was just parsed.
 
 <p>Note: Implementors should invoke the <code>onComment</code> method on all the registered listeners.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html#fireCommentEvent(java.lang.String)">fireCommentEvent</A></CODE> in interface <CODE><A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2">XmlParseEventSource</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>content</CODE> - the content of the comment (i.e., everything between <code>&lt;--</code> and <code>--&gt;</code>).</DL>
</DD>
</DL>
<HR>

<A NAME="scan()"><!-- --></A><H3>
scan</H3>
<PRE>
protected final char <B>scan</B>()</PRE>
<DL>
<DD>Moves the cursor forward one position and returns the character at that position.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the character at the next position or the null-char (<code>'\0'</code>), 
        if there were no more characters.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="unscan()"><!-- --></A><H3>
unscan</H3>
<PRE>
protected final char <B>unscan</B>()</PRE>
<DL>
<DD>Moves the cursor back one position and returns the character at that position.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the character at the previous position or the null-char (<code>'\0'</code>), 
        if there were no more characters.</DL>
</DD>
</DL>
<HR>

<A NAME="peek()"><!-- --></A><H3>
peek</H3>
<PRE>
protected final char <B>peek</B>()</PRE>
<DL>
<DD>Returns the character at the next position without moving the cursor forward.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the character at the next position or the null-char (<code>'\0'</code>), 
        if there were no more characters.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="scanUntil(char...)"><!-- --></A><H3>
scanUntil</H3>
<PRE>
protected final java.lang.String <B>scanUntil</B>(char...&nbsp;pattern)</PRE>
<DL>
<DD>Scans from the current position to the first occurrence of any of the specified characters.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - the characters to scan until.
<DT><B>Returns:</B><DD>a string cotaining everything from the current position to the first occurrence of any of the specified characters. 
        Returns <code>null</code> if none of those characters were encountered.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="scanUntil(java.lang.String)"><!-- --></A><H3>
scanUntil</H3>
<PRE>
protected final java.lang.String <B>scanUntil</B>(java.lang.String&nbsp;pattern)</PRE>
<DL>
<DD>Scans from the current position to the first occurrence of the specified string.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - the string to scan until.
<DT><B>Returns:</B><DD>a string containing everything from the current position to the first occurrence of the specified string.
        Returns <code>null</code> if the specified string was not encountered.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="scanUntil(java.lang.String, boolean)"><!-- --></A><H3>
scanUntil</H3>
<PRE>
protected final java.lang.String <B>scanUntil</B>(java.lang.String&nbsp;pattern,
                                           boolean&nbsp;ignoreCase)</PRE>
<DL>
<DD>Scans from the current position to the first occurrence of the specified string.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - the string to scan until.<DD><CODE>ignoreCase</CODE> - indicates whether the comparison is case-insensitive.
<DT><B>Returns:</B><DD>a string containing everything from the current position to the first occurrence of the specified string.
        Returns <code>null</code> if the specified string was not encountered.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="skip(char...)"><!-- --></A><H3>
skip</H3>
<PRE>
protected final int <B>skip</B>(char...&nbsp;pattern)</PRE>
<DL>
<DD>Moves the cursor forward without returning a value (i.e., skipping characters) while the next character 
 scanned matches any of the specified characters - in any order.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - the string to skip.
<DT><B>Returns:</B><DD>the number of characters that were skipped; either zero or the length of the specified string.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="skip(java.lang.String)"><!-- --></A><H3>
skip</H3>
<PRE>
protected final int <B>skip</B>(java.lang.String&nbsp;pattern)</PRE>
<DL>
<DD>Moves the cursor forward without returning a value (i.e., skipping characters) while the next character 
 scanned matches the subsequent character in the specified string, in order, from first to last.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - - the string to skip.
<DT><B>Returns:</B><DD>the number of characters that were skipped; either zero or the length of the specified string.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<HR>

<A NAME="skip(java.lang.String, boolean)"><!-- --></A><H3>
skip</H3>
<PRE>
protected final int <B>skip</B>(java.lang.String&nbsp;pattern,
                         boolean&nbsp;ignoreCase)</PRE>
<DL>
<DD>Moves the cursor forward without returning a value (i.e., skipping characters) while the next character 
 scanned matches the subsequent character in the specified string, in order, from first to last.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>pattern</CODE> - the string to skip.<DD><CODE>ignoreCase</CODE> - indicates whether the comparison is case-insensitive.
<DT><B>Returns:</B><DD>the number of characters that were skipped; either zero or the length of the specified string.
<DT><B>Throws:</B>
<DD><CODE><A HREF="../../../proj78/xml/XmlException.html" title="class in proj78.xml">XmlException</A></CODE> - <em>FILE_IO_ERR</em>: if an I/O error occurs reading from the underlying character stream.</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/XmlParser.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../proj78/xml/parser2/XmlParseEventSource.html" title="interface in proj78.xml.parser2"><B>PREV CLASS</B></A>&nbsp;
&nbsp;<A HREF="../../../proj78/xml/parser2/XmlParserImpl.html" title="class in proj78.xml.parser2"><B>NEXT CLASS</B></A></FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?proj78/xml/parser2/XmlParser.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="XmlParser.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
